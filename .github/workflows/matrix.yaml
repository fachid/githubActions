name: matrix
on:
  workflow_dispatch:
    inputs:
      OS:
        description: provide all OS in stringified array format
        required: true
        default: "'ubuntu-latest','windows-latest'"
      NODE_VERSION:
        description: provide all node versions in stringified array format
        required: true
        default: "'1','10'"
jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      os: ${{ steps.set-matrix.outputs.os }}
      nodeVersion: ${{ steps.set-matrix.outputs.nodeVersion }}
    steps:
      - id: set-matrix
        run: |
          echo "::set-output name=os::${{format('[{0}]',github.event.inputs.OS)}}"
          # echo "::set-output name=nodeVersion::${{format('[{0}]',github.event.inputs.NODE_VERSION)}}"
          value='1,2,3'
          echo "::set-output name=nodeVersion::$value"
          echo 
  print:
    runs-on: ubuntu-latest
    needs: prebuild
    steps:
      - id: set-matrix
        run: |
          echo needs.prebuild.outputs.os
          echo needs.prebuild.outputs.nodeVersion

  build:
    needs: prebuild
    runs-on: ubuntu-latest
    name: "${{ matrix.OS }} ${{ matrix.NODE_VERSION }}"
    strategy:
      fail-fast: false
      matrix:
        OS: ${{fromJSON(needs.prebuild.outputs.os)}}
        NODE_VERSION: ${{fromJSON(needs.prebuild.outputs.nodeVersion)}}
    steps:
      - name: running
        run: |
          sleep ${{ matrix.NODE_VERSION }}
          echo "running job with ${{ matrix.OS }} ${{ matrix.NODE_VERSION }}"