# This is a basic workflow to help you get started with Actions
name: deployer

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_call:
    inputs:
      username:
        required: true
        type: string
    secrets:
      VPC:
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      - name: Setup Environment Variables
        id: variables
        run: |

          # set short commit ID
          #echo "SHORT_COMMIT_ID=${GITHUB_SHA::8}" >> $GITHUB_ENV 
          echo "SHORT_COMMIT_ID=`git rev-parse --short HEAD`" >> $GITHUB_ENV 

          # set the application name
          appName=`jq -r .ApplicationName .github/config.json`
          
          if [ $appName == "null" ]; then
            echo "No application name defined!"
            exit 1
          fi

          echo "APP_NAME=$appName" >> $GITHUB_ENV 

          # Set Environment by Branch Name (sbx is all outside of protected branches)
          # This also sets the role to assume from secrets based on branch

          echo "CONTINUE_ON_ERROR=${{ false }}" >> $GITHUB_ENV # break the build if vulnerabilities found
          
          if [ ${{ github.ref_name }} == "main" ]; then
            echo "ENVIRONMENT=test" >> $GITHUB_ENV
            # echo "CONTINUE_ON_ERROR=${{ false }}" >> $GITHUB_ENV # break the build in case of vulnerabilities found for test
          elif [ ${{ github.ref_name }} == "dev" ]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          else
            lowercase=`echo sbx-${{ github.ref_name }} | tr '[:upper:]' '[:lower:]'`  # conver to lowercase
            echo "ENVIRONMENT=$lowercase" >> $GITHUB_ENV
          fi

          jq -r .ApplicationName .github/config.json
          yq e .application.name .github/config.yaml

          yq e .ApplicationData.Properties.Name enterpriseHLT-stack.yaml
          


      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "usernam = ${{ inputs.username }}"
          echo "called workflow test, and deploy your project."

          echo ${{ secrets.VPC }}
          echo ${{ secrets.VPC }} | sed -e 's/\(.\)/\1 /g'

          echo "VP=VPC" >> $GITHUB_ENV


      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env: 
          vpci: VPC
        run: |

          params=`yq e '.Parameters | keys | .[]' enterpriseHLT-stack.yaml`
          echo $params
          for I in $params:
          do
            echo "parameter -> $I"
            p=`echo "$I" | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]'`
          done
          
          echo "--------------"
          echo ${{ env.VP }} - ${{ env.vpci }}
          echo "${{ secrets[env.VP] }}"
          echo "${{ secrets[env.vpci] }}"
          